/* Apply a natural box layout model to all elements, but allowing components to change
   https://www.paulirish.com/2012/box-sizing-border-box-ftw/ */
html {
  box-sizing: border-box;
}

/* Basic page styles */

html {
  font-family: sans-serif;
  font-size: 22px;
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 30px;
}

h1,
h2 {
  font-weight: bold;
  color: white;
  background-color:	#FF0000;
}

p {
  top: 10%
  margin: 30%;
  padding: 10%;
  background-color: #1E90FF;
}



/* Flexbox styles */

.flex-container {
  display: flex;
  /* This line tells your browser the the flex items should wrap to the
     next line when sizing them with percentage based widths. */
  align-items: center;
  flex-direction: row;

}



/* The flexible column class contains styles shared between each column size */
.col {
  /* Add padding to create gutters between your grid columns */
  padding-left: 5px;
  padding-right: 5px;
  /* The background color is just to help visualize the grid */
  margin-bottom: 10px;
  padding: 10%;
}

/* Define a series of classes that correspond to units of your grid.
   Here, col-1 represents one unit in your grid.
   The column width is calculated by dividing 100% by the number of columns in your grid.  */
.col-1 {
  width: 20%;
}
.col-2 {
  width: 16.66%;
}
.col-3 {
  width: 25%;
}
.col-4 {
  width: 33.33%;
}
.col-5 {
  width: 41.66%;
}
.col-6 {
  width: 50%;
}
.col-7 {
  width: 58.33%;
}
.col-8 {
  width: 66.66%;
}
.col-9 {
  width: 75%;
}
.col-10 {
  width: 83.33%;
}
.col-11 {
  width: 91.66%;
}
.col-12 {
  width: 100%;
}
